{
    "info": {
        "title": "app",
        "version": "0.2.0"
    },
    "openapi": "3.1.0",
    "servers": [
        {
            "url": "/"
        }
    ],
    "paths": {
        "/health": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Health Check",
                "description": "Execute a health check against backend components.  Returns system information including database and cache status.",
                "operationId": "SystemHealth",
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemHealth"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/access/login": {
            "post": {
                "tags": [
                    "Access"
                ],
                "summary": "Login",
                "description": "Authenticate a user.",
                "operationId": "AccountLogin",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountLogin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuth2Login"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/access/logout": {
            "post": {
                "tags": [
                    "Access"
                ],
                "summary": "Logout",
                "description": "Account Logout",
                "operationId": "AccountLogout",
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "Access"
                ],
                "summary": "Profile",
                "description": "User Profile.",
                "operationId": "AccountProfile",
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/access/signup": {
            "post": {
                "tags": [
                    "Access"
                ],
                "summary": "Signup",
                "description": "User Signup.",
                "operationId": "AccountRegister",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegister"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User Accounts"
                ],
                "summary": "ListUsers",
                "description": "List users.",
                "operationId": "ListUsers",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "createdAfter",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "updatedBefore",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "updatedAfter",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "searchField",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Field to search"
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "searchString",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Field to search"
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "searchIgnoreCase",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "boolean",
                                    "default": false
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Search should be case sensitive",
                            "default": false
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "currentPage",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1.0,
                            "default": 1
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1.0,
                            "default": 20
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "default": "name"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Order by field",
                            "default": "name"
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "enum": [
                                "asc",
                                "desc",
                                null
                            ],
                            "title": "Field to search",
                            "default": "asc"
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "description": "Maximal number of items to send."
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "description": "Offset from the beginning of the query."
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of items."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "User Accounts"
                ],
                "summary": "CreateUser",
                "description": "Create a new user.",
                "operationId": "CreateUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/users/{user_id}": {
            "get": {
                "tags": [
                    "User Accounts"
                ],
                "summary": "GetUser",
                "description": "Get a user.",
                "operationId": "GetUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User ID",
                            "description": "The user to retrieve."
                        },
                        "description": "The user to retrieve.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "User Accounts"
                ],
                "summary": "DeleteUser",
                "description": "Delete a user from the system.",
                "operationId": "DeleteUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User ID",
                            "description": "The user to delete."
                        },
                        "description": "The user to delete.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request fulfilled, nothing follows",
                        "headers": {}
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "User Accounts"
                ],
                "summary": "UpdateUser",
                "description": "Create a new user.",
                "operationId": "UpdateUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User ID",
                            "description": "The user to update."
                        },
                        "description": "The user to update.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/teams": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "ListTeams",
                "description": "List teams that your account can access..",
                "operationId": "ListTeams",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/Team"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "description": "Maximal number of items to send."
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "description": "Offset from the beginning of the query."
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of items."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "CreateTeam",
                "description": "Create a new team.",
                "operationId": "CreateTeam",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/teams/{team_id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "GetTeam",
                "description": "Get details about a team.",
                "operationId": "GetTeam",
                "parameters": [
                    {
                        "name": "team_id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Team ID",
                            "description": "The team to retrieve."
                        },
                        "description": "The team to retrieve.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Teams"
                ],
                "summary": "DeleteTeam",
                "description": "Delete a team.",
                "operationId": "DeleteTeam",
                "parameters": [
                    {
                        "name": "team_id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Team ID",
                            "description": "The team to delete."
                        },
                        "description": "The team to delete.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request fulfilled, nothing follows",
                        "headers": {}
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Teams"
                ],
                "summary": "UpdateTeam",
                "description": "Update a migration team.",
                "operationId": "UpdateTeam",
                "parameters": [
                    {
                        "name": "team_id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Team ID",
                            "description": "The team to update."
                        },
                        "description": "The team to update.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/roles/{role_slug}/assign": {
            "post": {
                "tags": [
                    "User Account Roles"
                ],
                "summary": "AssignRole",
                "description": "Create a new migration role.",
                "operationId": "AssignUserRole",
                "parameters": [
                    {
                        "name": "role_slug",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "title": "Role Slug",
                            "description": "The role to grant."
                        },
                        "description": "The role to grant.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRoleAdd"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/roles/{role_slug}/revoke": {
            "post": {
                "tags": [
                    "User Account Roles"
                ],
                "summary": "RevokeRole",
                "description": "Delete a role from the system.",
                "operationId": "RevokeUserRole",
                "parameters": [
                    {
                        "name": "role_slug",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "title": "Role Slug",
                            "description": "The role to revoke."
                        },
                        "description": "The role to revoke.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRoleRevoke"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/teams/{team_id}/members/add": {
            "post": {
                "tags": [
                    "Team Members"
                ],
                "summary": "AddMemberToTeam",
                "description": "Add a member to a team.",
                "operationId": "AddMemberToTeam",
                "parameters": [
                    {
                        "name": "users_service",
                        "in": "query",
                        "schema": {},
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "team_id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Team ID",
                            "description": "The team to update."
                        },
                        "description": "The team to update.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMemberModify"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/teams/{team_id}/members/remove": {
            "post": {
                "tags": [
                    "Team Members"
                ],
                "summary": "RemoveMemberFromTeam",
                "description": "Revoke a members access to a team.",
                "operationId": "RemoveMemberFromTeam",
                "parameters": [
                    {
                        "name": "users_service",
                        "in": "query",
                        "schema": {},
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "team_id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Team ID",
                            "description": "The team to delete."
                        },
                        "description": "The team to delete.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamMemberModify"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "ListTags",
                "description": "List tags.",
                "operationId": "ListTags",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "createdAfter",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "updatedBefore",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "updatedAfter",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "searchField",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Field to search"
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "searchString",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Field to search"
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "searchIgnoreCase",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "boolean",
                                    "default": false
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Search should be case sensitive",
                            "default": false
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "default": "name"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Order by field",
                            "default": "name"
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "enum": [
                                "asc",
                                "desc",
                                null
                            ],
                            "title": "Field to search",
                            "default": "desc"
                        },
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/ListTagsTagResponseBody"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "description": "Maximal number of items to send."
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "description": "Offset from the beginning of the query."
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of items."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "CreateTag",
                "description": "Create a new tag.",
                "operationId": "CreateTag",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTagTagRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTagTagResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/tags/{tag_id}": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "GetTag",
                "description": "Get a tag.",
                "operationId": "GetTag",
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Tag ID",
                            "description": "The tag to retrieve."
                        },
                        "description": "The tag to retrieve.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTagTagResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Tags"
                ],
                "summary": "DeleteTag",
                "description": "Delete a tag.",
                "operationId": "DeleteTag",
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Tag ID",
                            "description": "The tag to delete."
                        },
                        "description": "The tag to delete.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request fulfilled, nothing follows",
                        "headers": {}
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Tags"
                ],
                "summary": "UpdateTag",
                "description": "Update a tag.",
                "operationId": "UpdateTag",
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Tag ID",
                            "description": "The tag to update."
                        },
                        "description": "The tag to update.",
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTagTagRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateTagTagResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "components": {
        "schemas": {
            "AccountLogin": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "username"
                ],
                "title": "AccountLogin"
            },
            "AccountRegister": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "name": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "AccountRegister"
            },
            "CreateTagTagRequestBody": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "slug"
                ],
                "title": "CreateTagTagRequestBody"
            },
            "CreateTagTagResponseBody": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "slug"
                ],
                "title": "CreateTagTagResponseBody"
            },
            "GetTagTagResponseBody": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "slug"
                ],
                "title": "GetTagTagResponseBody"
            },
            "ListTagsTagResponseBody": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "slug"
                ],
                "title": "ListTagsTagResponseBody"
            },
            "Message": {
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "Message"
            },
            "OAuth2Login": {
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "token_type": {
                        "type": "string"
                    },
                    "refresh_token": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "expires_in": {
                        "oneOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "token_type"
                ],
                "title": "OAuth2Login"
            },
            "OauthAccount": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "oauthName": {
                        "type": "string"
                    },
                    "accessToken": {
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "accountEmail": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "oneOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "refreshToken": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "accessToken",
                    "accountEmail",
                    "accountId",
                    "id",
                    "oauthName"
                ],
                "title": "OauthAccount"
            },
            "SystemHealth": {
                "properties": {
                    "database_status": {
                        "type": "string",
                        "enum": [
                            "online",
                            "offline"
                        ]
                    },
                    "cache_status": {
                        "type": "string",
                        "enum": [
                            "online",
                            "offline"
                        ]
                    },
                    "app": {
                        "type": "string",
                        "default": "app"
                    },
                    "version": {
                        "type": "string",
                        "default": "0.2.0"
                    }
                },
                "type": "object",
                "required": [
                    "cache_status",
                    "database_status"
                ],
                "title": "SystemHealth"
            },
            "Team": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "members": {
                        "items": {
                            "$ref": "#/components/schemas/TeamMember"
                        },
                        "type": "array"
                    },
                    "tags": {
                        "items": {
                            "$ref": "#/components/schemas/TeamTag"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "Team"
            },
            "TeamCreate": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "TeamCreate"
            },
            "TeamMember": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "userId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "email": {
                        "type": "string"
                    },
                    "name": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "role": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/TeamRoles"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": "MEMBER"
                    },
                    "isOwner": {
                        "oneOf": [
                            {
                                "type": "boolean",
                                "default": false
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "id",
                    "userId"
                ],
                "title": "TeamMember"
            },
            "TeamMemberModify": {
                "properties": {
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "userName"
                ],
                "title": "TeamMemberModify"
            },
            "TeamRoles": {
                "type": "string",
                "enum": [
                    "ADMIN",
                    "MEMBER"
                ],
                "title": "TeamRoles",
                "description": "Valid Values for Team Roles."
            },
            "TeamTag": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "title": "TeamTag"
            },
            "TeamUpdate": {
                "properties": {
                    "name": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "description": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "tags": {
                        "oneOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [],
                "title": "TeamUpdate"
            },
            "UpdateTagTagRequestBody": {
                "properties": {
                    "name": {
                        "oneOf": [
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "description": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "slug": {
                        "oneOf": [
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [],
                "title": "UpdateTagTagRequestBody"
            },
            "UpdateTagTagResponseBody": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "slug"
                ],
                "title": "UpdateTagTagResponseBody"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "email": {
                        "type": "string"
                    },
                    "name": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "isSuperuser": {
                        "type": "boolean",
                        "default": false
                    },
                    "isActive": {
                        "type": "boolean",
                        "default": false
                    },
                    "isVerified": {
                        "type": "boolean",
                        "default": false
                    },
                    "hasPassword": {
                        "type": "boolean",
                        "default": false
                    },
                    "teams": {
                        "items": {
                            "$ref": "#/components/schemas/UserTeam"
                        },
                        "type": "array"
                    },
                    "roles": {
                        "items": {
                            "$ref": "#/components/schemas/UserRole"
                        },
                        "type": "array"
                    },
                    "oauthAccounts": {
                        "items": {
                            "$ref": "#/components/schemas/OauthAccount"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "id"
                ],
                "title": "User"
            },
            "UserCreate": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "name": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "isSuperuser": {
                        "type": "boolean",
                        "default": false
                    },
                    "isActive": {
                        "type": "boolean",
                        "default": true
                    },
                    "isVerified": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "UserCreate"
            },
            "UserRole": {
                "properties": {
                    "roleId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "roleSlug": {
                        "type": "string"
                    },
                    "roleName": {
                        "type": "string"
                    },
                    "assignedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "required": [
                    "assignedAt",
                    "roleId",
                    "roleName",
                    "roleSlug"
                ],
                "title": "UserRole"
            },
            "UserRoleAdd": {
                "properties": {
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "userName"
                ],
                "title": "UserRoleAdd"
            },
            "UserRoleRevoke": {
                "properties": {
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "userName"
                ],
                "title": "UserRoleRevoke"
            },
            "UserTeam": {
                "properties": {
                    "teamId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "teamName": {
                        "type": "string"
                    },
                    "isOwner": {
                        "type": "boolean",
                        "default": false
                    },
                    "role": {
                        "$ref": "#/components/schemas/TeamRoles"
                    }
                },
                "type": "object",
                "required": [
                    "teamId",
                    "teamName"
                ],
                "title": "UserTeam"
            },
            "UserUpdate": {
                "properties": {
                    "email": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "password": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "name": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "isSuperuser": {
                        "oneOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "isActive": {
                        "oneOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "isVerified": {
                        "oneOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [],
                "title": "UserUpdate"
            }
        },
        "securitySchemes": {
            "BearerToken": {
                "type": "oauth2",
                "description": "OAUTH2 password bearer authentication and authorization.",
                "name": "Authorization",
                "in": "header",
                "scheme": "Bearer",
                "bearerFormat": "JWT",
                "flows": {
                    "password": {
                        "tokenUrl": "/api/access/login"
                    }
                }
            }
        }
    },
    "security": [
        {
            "BearerToken": []
        },
        {
            "BearerToken": []
        }
    ]
}
