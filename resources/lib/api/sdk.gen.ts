// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { AccountLoginData, AccountLoginResponse, AccountLogoutResponse, AccountProfileResponse, AccountRegisterData, AccountRegisterResponse, WorkerJobAbortData, WorkerJobAbortResponse, WorkerJobDetailData, WorkerJobDetailResponse, WorkerJobRetryData, WorkerJobRetryResponse, WorkerQueueDetailData, WorkerQueueDetailResponse, WorkerQueueListResponse, SystemHealthResponse, ListTagsData, ListTagsResponse, CreateTagData, CreateTagResponse, GetTagData, GetTagResponse, DeleteTagData, DeleteTagResponse, UpdateTagData, UpdateTagResponse, AddMemberToTeamData, AddMemberToTeamResponse, RemoveMemberFromTeamData, RemoveMemberFromTeamResponse, ListTeamsData, ListTeamsResponse, CreateTeamData, CreateTeamResponse, GetTeamData, GetTeamResponse, DeleteTeamData, DeleteTeamResponse, UpdateTeamData, UpdateTeamResponse, AssignUserRoleData, AssignUserRoleResponse, RevokeUserRoleData, RevokeUserRoleResponse, ListUsersData, ListUsersResponse, CreateUserData, CreateUserResponse, GetUserData, GetUserResponse, DeleteUserData, DeleteUserResponse, UpdateUserData, UpdateUserResponse } from './types.gen';

export class AccessService {
    /**
     * Login
     * Authenticate a user.
     * @param data The data for the request.
     * @param data.formData
     * @returns OAuth2Login Document created, URL follows
     * @throws ApiError
     */
    public static accountLogin(data: AccountLoginData): CancelablePromise<AccountLoginResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/access/login',
            formData: data.formData,
            mediaType: 'application/x-www-form-urlencoded',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * Logout
     * Account Logout
     * @returns unknown Document created, URL follows
     * @throws ApiError
     */
    public static accountLogout(): CancelablePromise<AccountLogoutResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/access/logout'
        });
    }
    
    /**
     * Profile
     * User Profile.
     * @returns User Request fulfilled, document follows
     * @throws ApiError
     */
    public static accountProfile(): CancelablePromise<AccountProfileResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/me'
        });
    }
    
    /**
     * Signup
     * User Signup.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns User Document created, URL follows
     * @throws ApiError
     */
    public static accountRegister(data: AccountRegisterData): CancelablePromise<AccountRegisterResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/access/signup',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
}

export class SaqService {
    /**
     * Job Abort
     * Abort active job.
     * @param data The data for the request.
     * @param data.queueId
     * @param data.jobId
     * @returns unknown Request accepted, processing continues off-line
     * @throws ApiError
     */
    public static workerJobAbort(data: WorkerJobAbortData): CancelablePromise<WorkerJobAbortResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/saq/api/queues/{queue_id}/jobs/{job_id}/abort',
            path: {
                queue_id: data.queueId,
                job_id: data.jobId
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * Job Details
     * List job details.
     * @param data The data for the request.
     * @param data.queueId
     * @param data.jobId
     * @returns unknown Request fulfilled, document follows
     * @throws ApiError
     */
    public static workerJobDetail(data: WorkerJobDetailData): CancelablePromise<WorkerJobDetailResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/saq/api/queues/{queue_id}/jobs/{job_id}',
            path: {
                queue_id: data.queueId,
                job_id: data.jobId
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * Job Retry
     * Retry a failed job..
     * @param data The data for the request.
     * @param data.queueId
     * @param data.jobId
     * @returns unknown Request accepted, processing continues off-line
     * @throws ApiError
     */
    public static workerJobRetry(data: WorkerJobRetryData): CancelablePromise<WorkerJobRetryResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/saq/api/queues/{queue_id}/jobs/{job_id}/retry',
            path: {
                queue_id: data.queueId,
                job_id: data.jobId
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * Queue Detail
     * List queue details.
     * @param data The data for the request.
     * @param data.queueId
     * @returns QueueInfo Request fulfilled, document follows
     * @throws ApiError
     */
    public static workerQueueDetail(data: WorkerQueueDetailData): CancelablePromise<WorkerQueueDetailResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/saq/api/queues/{queue_id}',
            path: {
                queue_id: data.queueId
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * Queue List
     * List configured worker queues.
     * @returns QueueInfo Request fulfilled, document follows
     * @throws ApiError
     */
    public static workerQueueList(): CancelablePromise<WorkerQueueListResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/saq/api/queues'
        });
    }
    
}

export class SystemService {
    /**
     * Health Check
     * Execute a health check against backend components.  Returns system information including database and cache status.
     * @returns SystemHealth Request fulfilled, document follows
     * @throws ApiError
     */
    public static health(): CancelablePromise<SystemHealthResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/health'
        });
    }
    
}

export class TagsService {
    /**
     * ListTags
     * List tags.
     * @param data The data for the request.
     * @param data.ids
     * @param data.createdBefore
     * @param data.createdAfter
     * @param data.updatedBefore
     * @param data.updatedAfter
     * @param data.searchField
     * @param data.searchString
     * @param data.searchIgnoreCase
     * @param data.orderBy
     * @param data.sortOrder
     * @returns unknown Request fulfilled, document follows
     * @throws ApiError
     */
    public static listTags(data: ListTagsData = {}): CancelablePromise<ListTagsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/tags',
            query: {
                ids: data.ids,
                createdBefore: data.createdBefore,
                createdAfter: data.createdAfter,
                updatedBefore: data.updatedBefore,
                updatedAfter: data.updatedAfter,
                searchField: data.searchField,
                searchString: data.searchString,
                searchIgnoreCase: data.searchIgnoreCase,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * CreateTag
     * Create a new tag.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CreateTagTagResponseBody Document created, URL follows
     * @throws ApiError
     */
    public static createTag(data: CreateTagData): CancelablePromise<CreateTagResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/tags',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * GetTag
     * Get a tag.
     * @param data The data for the request.
     * @param data.tagId The tag to retrieve.
     * @returns GetTagTagResponseBody Request fulfilled, document follows
     * @throws ApiError
     */
    public static getTag(data: GetTagData): CancelablePromise<GetTagResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/tags/{tag_id}',
            path: {
                tag_id: data.tagId
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * DeleteTag
     * Delete a tag.
     * @param data The data for the request.
     * @param data.tagId The tag to delete.
     * @returns void Request fulfilled, nothing follows
     * @throws ApiError
     */
    public static deleteTag(data: DeleteTagData): CancelablePromise<DeleteTagResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/tags/{tag_id}',
            path: {
                tag_id: data.tagId
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * UpdateTag
     * Update a tag.
     * @param data The data for the request.
     * @param data.tagId The tag to update.
     * @param data.requestBody
     * @returns UpdateTagTagResponseBody Request fulfilled, document follows
     * @throws ApiError
     */
    public static updateTag(data: UpdateTagData): CancelablePromise<UpdateTagResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/api/tags/{tag_id}',
            path: {
                tag_id: data.tagId
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
}

export class TeamMembersService {
    /**
     * AddMemberToTeam
     * Add a member to a team.
     * @param data The data for the request.
     * @param data.usersService
     * @param data.teamId The team to update.
     * @param data.requestBody
     * @returns Team Document created, URL follows
     * @throws ApiError
     */
    public static addMemberToTeam(data: AddMemberToTeamData): CancelablePromise<AddMemberToTeamResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/teams/{team_id}/members/add',
            path: {
                team_id: data.teamId
            },
            query: {
                users_service: data.usersService
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * RemoveMemberFromTeam
     * Revoke a members access to a team.
     * @param data The data for the request.
     * @param data.usersService
     * @param data.teamId The team to delete.
     * @param data.requestBody
     * @returns Team Document created, URL follows
     * @throws ApiError
     */
    public static removeMemberFromTeam(data: RemoveMemberFromTeamData): CancelablePromise<RemoveMemberFromTeamResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/teams/{team_id}/members/remove',
            path: {
                team_id: data.teamId
            },
            query: {
                users_service: data.usersService
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
}

export class TeamsService {
    /**
     * ListTeams
     * List teams that your account can access..
     * @param data The data for the request.
     * @param data.ids
     * @returns unknown Request fulfilled, document follows
     * @throws ApiError
     */
    public static listTeams(data: ListTeamsData = {}): CancelablePromise<ListTeamsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/teams',
            query: {
                ids: data.ids
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * CreateTeam
     * Create a new team.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Team Document created, URL follows
     * @throws ApiError
     */
    public static createTeam(data: CreateTeamData): CancelablePromise<CreateTeamResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/teams',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * GetTeam
     * Get details about a team.
     * @param data The data for the request.
     * @param data.teamId The team to retrieve.
     * @returns Team Request fulfilled, document follows
     * @throws ApiError
     */
    public static getTeam(data: GetTeamData): CancelablePromise<GetTeamResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/teams/{team_id}',
            path: {
                team_id: data.teamId
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * DeleteTeam
     * Delete a team.
     * @param data The data for the request.
     * @param data.teamId The team to delete.
     * @returns void Request fulfilled, nothing follows
     * @throws ApiError
     */
    public static deleteTeam(data: DeleteTeamData): CancelablePromise<DeleteTeamResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/teams/{team_id}',
            path: {
                team_id: data.teamId
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * UpdateTeam
     * Update a migration team.
     * @param data The data for the request.
     * @param data.teamId The team to update.
     * @param data.requestBody
     * @returns Team Request fulfilled, document follows
     * @throws ApiError
     */
    public static updateTeam(data: UpdateTeamData): CancelablePromise<UpdateTeamResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/api/teams/{team_id}',
            path: {
                team_id: data.teamId
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
}

export class UserAccountRolesService {
    /**
     * AssignRole
     * Create a new migration role.
     * @param data The data for the request.
     * @param data.roleSlug The role to grant.
     * @param data.requestBody
     * @returns Message Document created, URL follows
     * @throws ApiError
     */
    public static assignUserRole(data: AssignUserRoleData): CancelablePromise<AssignUserRoleResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/roles/{role_slug}/assign',
            path: {
                role_slug: data.roleSlug
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * RevokeRole
     * Delete a role from the system.
     * @param data The data for the request.
     * @param data.roleSlug The role to revoke.
     * @param data.requestBody
     * @returns Message Document created, URL follows
     * @throws ApiError
     */
    public static revokeUserRole(data: RevokeUserRoleData): CancelablePromise<RevokeUserRoleResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/roles/{role_slug}/revoke',
            path: {
                role_slug: data.roleSlug
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
}

export class UserAccountsService {
    /**
     * ListUsers
     * List users.
     * @param data The data for the request.
     * @param data.ids
     * @param data.createdBefore
     * @param data.createdAfter
     * @param data.updatedBefore
     * @param data.updatedAfter
     * @param data.searchField
     * @param data.searchString
     * @param data.searchIgnoreCase
     * @param data.currentPage
     * @param data.pageSize
     * @param data.orderBy
     * @param data.sortOrder
     * @returns unknown Request fulfilled, document follows
     * @throws ApiError
     */
    public static listUsers(data: ListUsersData = {}): CancelablePromise<ListUsersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/users',
            query: {
                ids: data.ids,
                createdBefore: data.createdBefore,
                createdAfter: data.createdAfter,
                updatedBefore: data.updatedBefore,
                updatedAfter: data.updatedAfter,
                searchField: data.searchField,
                searchString: data.searchString,
                searchIgnoreCase: data.searchIgnoreCase,
                currentPage: data.currentPage,
                pageSize: data.pageSize,
                orderBy: data.orderBy,
                sortOrder: data.sortOrder
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * CreateUser
     * Create a new user.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns User Document created, URL follows
     * @throws ApiError
     */
    public static createUser(data: CreateUserData): CancelablePromise<CreateUserResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/users',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * GetUser
     * Get a user.
     * @param data The data for the request.
     * @param data.userId The user to retrieve.
     * @returns User Request fulfilled, document follows
     * @throws ApiError
     */
    public static getUser(data: GetUserData): CancelablePromise<GetUserResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/users/{user_id}',
            path: {
                user_id: data.userId
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * DeleteUser
     * Delete a user from the system.
     * @param data The data for the request.
     * @param data.userId The user to delete.
     * @returns void Request fulfilled, nothing follows
     * @throws ApiError
     */
    public static deleteUser(data: DeleteUserData): CancelablePromise<DeleteUserResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/users/{user_id}',
            path: {
                user_id: data.userId
            },
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
    /**
     * UpdateUser
     * Create a new user.
     * @param data The data for the request.
     * @param data.userId The user to update.
     * @param data.requestBody
     * @returns User Request fulfilled, document follows
     * @throws ApiError
     */
    public static updateUser(data: UpdateUserData): CancelablePromise<UpdateUserResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/api/users/{user_id}',
            path: {
                user_id: data.userId
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad request syntax or unsupported method'
            }
        });
    }
    
}