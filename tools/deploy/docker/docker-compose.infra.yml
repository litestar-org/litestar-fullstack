services:
  object-storage:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - object-storage-data:/data
    ports:
      - 19000:9000
      - 19001:9001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  object-storage-initializer:
    image: minio/mc:latest
    depends_on:
      object-storage:
        condition: service_healthy
    environment:
      MINIO_SERVER_URL: http://object-storage:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - ./minio-config.sh:/scripts/minio-config.sh
    entrypoint: /bin/sh
    command: /scripts/minio-config.sh
  cache:
    image: valkey/valkey:latest
    ports:
      - "16379:6379"
    hostname: cache
    command: redis-server --appendonly yes
    volumes:
      - cache-data:/data
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    restart: unless-stopped
    logging:
      options:
        max-size: 10m
        max-file: "3"
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 1s
      timeout: 3s
      retries: 30
  db:
    image: postgres:latest
    ports:
      - "15432:5432"
    hostname: db
    environment:
      POSTGRES_PASSWORD: "app"
      POSTGRES_USER: "app"
      POSTGRES_DB: "app"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    logging:
      options:
        max-size: 10m
        max-file: "3"
    healthcheck:
      test:
        - CMD
        - pg_isready
        - -U
        - app
      interval: 2s
      timeout: 3s
      retries: 40
volumes:
  db-data: {}
  cache-data: {}
  object-storage-data: {}
